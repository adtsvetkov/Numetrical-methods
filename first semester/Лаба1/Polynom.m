%Построим полином:
a = 0.1445;
b = -0.8262;
c = -5.8774;
d = -13.4301;
e = -63.0958;

p= [a b c d e]; %вектор полинома

%построим график полинома, чтобы графически узнать, в каком промежутке лежат корни
figure
a2= -15;
b2= 15;
N2= 999;
x= linspace(a2,b2,N2);
y= polyval(p, x); %задаем у полинома, строим полином
plot(x, y);
title('Полином'); %оформление
xlabel('x')                 
ylabel('y')                
grid on
hold on

%графически определили, что имеется два корня - один положительный, один отрицательный

b2 = 1 + (abs(e)./a); %по теореме о верхней границе положительных корней полинома

a2 = 1 /(1 + (a/abs(e))^(1/4)); %по теореме о нижней границе положительных корней полинома:

b3 = -1/(1+abs(d)/abs(e)); %по теореме о верхней гранце отрицательных корней полинома:

a3 = -1 - sqrt((abs(e))./a); %по теореме о нижней границе отрицательных корней полинома:

%зададим полином через инлайн
poly1 = inline('0.1445*x.^4 - 0.8262*x.^3 -5.8774*x.^2 - 13.4301*x -63.0958');

%Check(poly1, df1poly, df2poly, a2, b2, 'Проверка для положительного корня полинома');
%Check(poly1, df1poly, df2poly, a3, b3, 'Проверка для отрицательного корня полинома');

%По графику производных можем изменить границы для нахождения корня
a2 = 7.45;
b3 = -1.55;

%Bisection_method (poly1, a2, b2, 'Метод половинного деления для полинома, положительный корень: \n'); %для положительного корня
%Bisection_method (poly1, a3, b3, 'Метод половинного деления для полинома, отрицательный корень: \n'); %для отрицательного корня

%решение алгебраического уравнения методом Ньютона

df1poly = inline('4*0.1445*x.^3 + 3*(-0.8262)*x.^2 + 2*(-5.8774)*x -13.4301');
df2poly = inline('12*0.1445*x.^2 + 6*(-0.8262)*x + 2*(-5.8774)');

%Newthon_method(poly1, df1poly, df2poly, a2, b2, 'Метод Ньютона для полинома, положительный корень: \n');
Draw_newthon(poly1, df1poly, df2poly, a2, b2, 'Иллюстрация метода Ньютона для положительного корня полинома, 4 итерации');
%Newthon_method(poly1, df1poly, df2poly, a3, b3, 'Метод Ньютона для полинома, отрицательный корень: \n');
